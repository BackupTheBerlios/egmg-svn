/** \file ZebraLineGS.h
 * \author Andre Oeckerath
 * \brief ZebraLineGS.h contains the interface of the class ZebraLineGS.
 * \see Relaxation.h
 */
#ifndef ZEBRALINEGS_H_
#define ZEBRALINEGS_H_


#include "LineRelaxation.h"
#include "GSRedBlack.h"


namespace mg
{
/**
 * \brief ZebraLineGS is a class for a Gauss Seidel zebra line relaxation
 */
class ZebraLineGS : public mg::LineRelaxation
{
private:
    const GSRedBlack gsRedBlack_;
    void ninePointX(
        NumericArray &u,
        const NumericArray &f, 
        const Stencil &stencil,
        const Index nx, 
        const Index ny) const;
    void ninePointY(
        NumericArray &u,
        const NumericArray &f, 
        const Stencil &stencil,
        const Index nx, 
        const Index ny) const;
    void fullX(
        NumericArray &u,
        const NumericArray &f, 
        const Stencil &stencil,
        const Index nx, 
        const Index ny) const;
    void fullY(
        NumericArray &u,
        const NumericArray &f, 
        const Stencil &stencil,
        const Index nx, 
        const Index ny) const;
    //we don't want the autogenerated copy constructor and assignment operator
    ZebraLineGS(const ZebraLineGS&);
    ZebraLineGS& operator=(const ZebraLineGS&);
public:
    /**
     * \brief The constructor of a ZebraLineGS object
     * 
     * ZebraLineGS constructs a ZebraLineGS object with:
     * \param[in] direction             direction of the line relaxation
     *                                  (def. alternating directions)
     * \see Direction
     */ 
    ZebraLineGS(const Direction direction =ALTDIR)
        : LineRelaxation(direction),
          gsRedBlack_() {}
    virtual ~ZebraLineGS() {}
};
}
#endif /*ZEBRALINEGS_H_*/
